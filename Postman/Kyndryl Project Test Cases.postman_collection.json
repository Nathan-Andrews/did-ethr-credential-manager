{
	"info": {
		"_postman_id": "d63a0c6d-5e2b-4540-b609-71408b9e264c",
		"name": "Kyndryl Project Test Cases",
		"description": "This collection holds a variety of positive and negative JSON bodies. Using the stored requests to the issue-vc-test endpoint, the VC made with the provided JSON bodies will be stored and fetched by the front end. To verify the correct responses of these VC issuances, go into the console of the DMV app and ensure the expected output is seen.\n\nTest case 1: This is a positive test case with the correct DID, This will need to be updated to match the DID of the wallet the credential is being stored in.\n\nTest case 2: This is a negative test case with a properly formated DID that does not match the DID of the wallet. the VC will issue to the server running on port 3000, but it shoud detect the mismatch in DID and output an error message.\n\nTest case 3: This is a negative test case with a DID that is not properly formatted (e.g. the DID header is mispelled). The VC will not issue, and the response in postman should be a 400 error.\n\nTest case 4: This is a positive test case, once again the DID will need to be updated to match the wallet\n\nTest case 5: This ia a negative test where the claim is missing banking privelages. The VC will issue as normal, but will not be able to log in to the banking app.\n\nTest case 6: This is a negative test case where the claim segment of the JSON is missing, which should return a 400 error.\n\nTest case 7: This is a negative test case where the JWT is set to a non-viable JWT secret, which should cause an error to print in the console.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "44053266",
		"_collection_link": "https://lance-5589826.postman.co/workspace/Lance's-Workspace~97a32cda-2afe-44e5-82d5-8a8c7dd0408e/collection/44053266-d63a0c6d-5e2b-4540-b609-71408b9e264c?action=share&source=collection_link&creator=44053266"
	},
	"item": [
		{
			"name": "http://localhost:5000/issuer/issue-vc-test {test case 1}",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Parse the JSON response\r",
							"const jsonData = pm.response.json();\r",
							"\r",
							"// Test that the 'vc' field exists\r",
							"pm.test(\"Response has a 'vc' field\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"vc\");\r",
							"});\r",
							"\r",
							"// Test that 'vc' looks like a JWT (3 parts separated by '.')\r",
							"pm.test(\"'vc' field is a valid JWT structure\", function () {\r",
							"    const vc = jsonData.vc;\r",
							"    pm.expect(vc).to.be.a('string');\r",
							"    \r",
							"    const parts = vc.split('.');\r",
							"    pm.expect(parts.length).to.eql(3); // JWTs have 3 parts\r",
							"\r",
							"    parts.forEach((part, index) => {\r",
							"        pm.expect(part.length).to.be.above(0, `JWT part ${index + 1} should not be empty`);\r",
							"    });\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"subjectDid\": \"did:ethr:0x39D92b43B77231c107a8630010dC5De642f6875D\",\r\n  \"claim\": {\r\n    \"type\": \"TexasDriverLicense\",\r\n    \"issuer\": \"Texas A&M DMV\",\r\n    \"issuanceDate\": \"2025-04-27T12:00:00Z\",\r\n    \"licenseNumber\": \"DL987654\",\r\n    \"name\": \"Jane Smith\",\r\n    \"dateOfBirth\": \"1992-07-21\",\r\n    \"expiryDate\": \"2026-04-27T12:00:00Z\",\r\n    \"permissions\": [\"banking\", \"voting\"],\r\n    \"address\": \"456 University Dr, College Station, TX\"\r\n  }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/issuer/issue-vc-test",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"issuer",
						"issue-vc-test"
					]
				}
			},
			"response": []
		},
		{
			"name": "http://localhost:5000/issuer/issue-vc-test {test case 2}",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Parse the JSON response\r",
							"const jsonData = pm.response.json();\r",
							"\r",
							"// Test that the 'vc' field exists\r",
							"pm.test(\"Response has a 'vc' field\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"vc\");\r",
							"});\r",
							"\r",
							"// Test that 'vc' looks like a JWT (3 parts separated by '.')\r",
							"pm.test(\"'vc' field is a valid JWT structure\", function () {\r",
							"    const vc = jsonData.vc;\r",
							"    pm.expect(vc).to.be.a('string');\r",
							"    \r",
							"    const parts = vc.split('.');\r",
							"    pm.expect(parts.length).to.eql(3); // JWTs have 3 parts\r",
							"\r",
							"    parts.forEach((part, index) => {\r",
							"        pm.expect(part.length).to.be.above(0, `JWT part ${index + 1} should not be empty`);\r",
							"    });\r",
							"    console.log(\"The VC was created successfully, check the console of the web browser to ensure the application handled mismatched DIDs correctly\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"subjectDid\": \"did:ethr:0xabc123456789\",\r\n  \"claim\": {\r\n    \"type\": \"TexasDriverLicense\",\r\n    \"issuer\": \"Texas A&M DMV\",\r\n    \"issuanceDate\": \"2025-04-27T12:00:00Z\",\r\n    \"licenseNumber\": \"DL987654\",\r\n    \"name\": \"Jane Smith\",\r\n    \"dateOfBirth\": \"1992-07-21\",\r\n    \"expiryDate\": \"2026-04-27T12:00:00Z\",\r\n    \"permissions\": [\"banking\", \"voting\"],\r\n    \"address\": \"456 University Dr, College Station, TX\"\r\n  }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/issuer/issue-vc-test",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"issuer",
						"issue-vc-test"
					]
				}
			},
			"response": []
		},
		{
			"name": "http://localhost:5000/issuer/issue-vc-test {test case 3}",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							" pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"// Parse the JSON response\r",
							"const jsonData = pm.response.json();\r",
							"\r",
							"// Test that the 'vc' field exists\r",
							"pm.test(\"Response has an 'error' field\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"error\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"subjectDid\": \"did:ehr:0x39D92b43B77231c107a8630010dC5De642f6875D\",\r\n  \"claim\": {\r\n    \"type\": \"TexasDriverLicense\",\r\n    \"issuer\": \"Texas A&M DMV\",\r\n    \"issuanceDate\": \"2025-04-27T12:00:00Z\",\r\n    \"licenseNumber\": \"DL987654\",\r\n    \"name\": \"Jane Smith\",\r\n    \"dateOfBirth\": \"1992-07-21\",\r\n    \"expiryDate\": \"2026-04-27T12:00:00Z\",\r\n    \"permissions\": [\"banking\", \"voting\"],\r\n    \"address\": \"456 University Dr, College Station, TX\"\r\n  }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/issuer/issue-vc-test",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"issuer",
						"issue-vc-test"
					]
				}
			},
			"response": []
		},
		{
			"name": "http://localhost:5000/issuer/issue-vc-test {test case 4}",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Parse the JSON response\r",
							"const jsonData = pm.response.json();\r",
							"\r",
							"// Test that the 'vc' field exists\r",
							"pm.test(\"Response has a 'vc' field\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"vc\");\r",
							"});\r",
							"\r",
							"// Test that 'vc' looks like a JWT (3 parts separated by '.')\r",
							"pm.test(\"'vc' field is a valid JWT structure\", function () {\r",
							"    const vc = jsonData.vc;\r",
							"    pm.expect(vc).to.be.a('string');\r",
							"    \r",
							"    const parts = vc.split('.');\r",
							"    pm.expect(parts.length).to.eql(3); // JWTs have 3 parts\r",
							"\r",
							"    parts.forEach((part, index) => {\r",
							"        pm.expect(part.length).to.be.above(0, `JWT part ${index + 1} should not be empty`);\r",
							"    });\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"subjectDid\": \"did:ethr:0xabc123456789\",\r\n  \"claim\": {\r\n    \"type\": \"TexasDriverLicense\",\r\n    \"issuer\": \"Texas A&M DMV\",\r\n    \"issuanceDate\": \"2025-04-27T12:00:00Z\",\r\n    \"licenseNumber\": \"DL122953\",\r\n    \"name\": \"Emma Knight\",\r\n    \"dateOfBirth\": \"1997-03-11\",\r\n    \"expiryDate\": \"2026-04-27T12:00:00Z\",\r\n    \"permissions\": [\"banking\", \"voting\"],\r\n    \"address\": \"4134 Pelican Way, Galveston, TX\"\r\n  }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/issuer/issue-vc-test",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"issuer",
						"issue-vc-test"
					]
				}
			},
			"response": []
		},
		{
			"name": "http://localhost:5000/issuer/issue-vc-test {test case 5}",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Parse the JSON response\r",
							"const jsonData = pm.response.json();\r",
							"\r",
							"// Test that the 'vc' field exists\r",
							"pm.test(\"Response has a 'vc' field\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"vc\");\r",
							"});\r",
							"\r",
							"// Test that 'vc' looks like a JWT (3 parts separated by '.')\r",
							"pm.test(\"'vc' field is a valid JWT structure\", function () {\r",
							"    const vc = jsonData.vc;\r",
							"    pm.expect(vc).to.be.a('string');\r",
							"    \r",
							"    const parts = vc.split('.');\r",
							"    pm.expect(parts.length).to.eql(3); // JWTs have 3 parts\r",
							"\r",
							"    parts.forEach((part, index) => {\r",
							"        pm.expect(part.length).to.be.above(0, `JWT part ${index + 1} should not be empty`);\r",
							"    });\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"subjectDid\": \"did:ethr:0xabc123456789\",\r\n  \"claim\": {\r\n    \"type\": \"TexasDriverLicense\",\r\n    \"issuer\": \"Texas A&M DMV\",\r\n    \"issuanceDate\": \"2025-04-27T12:00:00Z\",\r\n    \"licenseNumber\": \"DL122953\",\r\n    \"name\": \"Emma Knight\",\r\n    \"dateOfBirth\": \"1997-03-11\",\r\n    \"expiryDate\": \"2026-04-27T12:00:00Z\",\r\n    \"permissions\": [\"voting\"],\r\n    \"address\": \"4134 Pelican Way, Galveston, TX\"\r\n  }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/issuer/issue-vc-test",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"issuer",
						"issue-vc-test"
					]
				}
			},
			"response": []
		},
		{
			"name": "http://localhost:5000/issuer/issue-vc-test {test case 6}",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							" pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"// Parse the JSON response\r",
							"const jsonData = pm.response.json();\r",
							"\r",
							"// Test that the 'vc' field exists\r",
							"pm.test(\"Response has an 'error' field\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"error\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"subjectDid\": \"did:ethr:0x39D92b43B77231c107a8630010dC5De642f6875D\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/issuer/issue-vc-test",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"issuer",
						"issue-vc-test"
					]
				}
			},
			"response": []
		},
		{
			"name": "http://localhost:5000/issuer/set-latest-vc {test case 7}",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							" pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Parse the JSON response\r",
							"const jsonData = pm.response.json();\r",
							"\r",
							"// Test that the 'vc' field exists\r",
							"pm.test(\"Response has an 'message' field\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"message\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"vc\" : \"qwdf0723ug4khjvbfw87q.qaoiwehfgcoiqhjkbdlkvqugsadiofasdgb54fasnld4656d5a4f651ssdfad8f655.d5f8754as6d54f56asdf785445dfh84g9sf8df54g1689rysfuir6g54h\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/issuer/set-latest-vc",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"issuer",
						"set-latest-vc"
					]
				}
			},
			"response": []
		}
	]
}