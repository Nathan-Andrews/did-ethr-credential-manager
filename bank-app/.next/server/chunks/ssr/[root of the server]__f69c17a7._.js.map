{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file:///home/outlaw/Capstone-Kyndryl-project/bank-app/components/sidebar.tsx"],"sourcesContent":["import Link from 'next/link';\r\n\r\nconst Sidebar = () => {\r\n  return (\r\n    <aside className=\"fixed top-35 left-2 h-65 w-64 bg-[var(--maroon)] text-white p-6 rounded-xl shadow-xl\">\r\n    <h2 className=\"text-xl font-bold mb-6\">Navigation</h2>\r\n    <nav>\r\n      <ul className=\"space-y-4\">\r\n        <li>\r\n          <Link href=\"/\" className=\"block p-2 hover:bg-gray-700 rounded\">\r\n            Home \r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link href=\"/account\" className=\"block p-2 hover:bg-gray-700 rounded\">\r\n            Account\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link href=\"/transaction\" className=\"block p-2 hover:bg-gray-700 rounded\">\r\n            Services\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  </aside>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n"],"names":[],"mappings":";;;;AAAA;;;AAEA,MAAM,UAAU;IACd,qBACE,8OAAC;QAAM,WAAU;;0BACjB,8OAAC;gBAAG,WAAU;0BAAyB;;;;;;0BACvC,8OAAC;0BACC,cAAA,8OAAC;oBAAG,WAAU;;sCACZ,8OAAC;sCACC,cAAA,8OAAC,4JAAA,CAAA,UAAI;gCAAC,MAAK;gCAAI,WAAU;0CAAsC;;;;;;;;;;;sCAIjE,8OAAC;sCACC,cAAA,8OAAC,4JAAA,CAAA,UAAI;gCAAC,MAAK;gCAAW,WAAU;0CAAsC;;;;;;;;;;;sCAIxE,8OAAC;sCACC,cAAA,8OAAC,4JAAA,CAAA,UAAI;gCAAC,MAAK;gCAAe,WAAU;0CAAsC;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQpF;uCAEe","debugId":null}},
    {"offset": {"line": 124, "column": 0}, "map": {"version":3,"sources":["file:///home/outlaw/Capstone-Kyndryl-project/bank-app/app/login/page.tsx"],"sourcesContent":["\"use client\"\r\nimport { useState, useEffect } from 'react';\r\nimport { useSession } from '../context/sessionContext';\r\nimport { useRouter } from 'next/navigation';\r\nimport Head from '@/components/header';\r\nimport Sidebar from '@/components/sidebar';\r\n\r\nconst SNAP_ID = 'local:http://localhost:8080';\r\n\r\ntype VPResponse = {\r\n  success: boolean,\r\n  vp: string\r\n}\r\n\r\nconst LoginPage = () => {\r\n  const { login } = useSession();\r\n  const router = useRouter();\r\n  const [isLoading, setIsLoading] = useState(false); \r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [statusMessage, setStatusMessage] = useState('');\r\n  const [isConnecting, setIsConnecting] = useState(false);\r\n\r\n  const connectToSnap = async () => {\r\n    try {\r\n      setIsConnecting(true);\r\n      setStatusMessage('Connecting to Digital ID service...');\r\n      await window.ethereum.request({\r\n        method: 'wallet_requestSnaps',\r\n        params: {\r\n          [SNAP_ID]: {}\r\n        }\r\n      });\r\n      setStatusMessage('Connected to Digital ID service');\r\n      return true;\r\n    } catch (error) {\r\n      setErrorMessage(`Failed to connect to Digital ID service: ${error.message}`);\r\n      return false;\r\n    } finally {\r\n      setIsConnecting(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (window.ethereum) {\r\n      connectToSnap();\r\n    }\r\n  }, []);\r\n\r\n  const handleDidLogin = async () => {\r\n    let challenge;\r\n    try {\r\n      setIsLoading(true);\r\n      setErrorMessage('');\r\n      setStatusMessage('Verifying your Digital ID...');\r\n      if (!window.ethereum) {\r\n        setErrorMessage('MetaMask is not installed. Please install MetaMask to continue.');\r\n        return;\r\n      }\r\n      const connected = await connectToSnap();\r\n      if (!connected) {\r\n        return;\r\n      }\r\n      try {\r\n        const snaps = await window.ethereum.request({\r\n          method: 'wallet_getSnaps',\r\n        });\r\n        const snapInstalled = Object.values(snaps).some((snap: any) => {\r\n          return snap.id === SNAP_ID;\r\n        });\r\n        if (!snapInstalled) {\r\n          setErrorMessage('DMV Snap not found. Please get your Digital ID from the DMV first.');\r\n          return;\r\n        }\r\n      } catch (snapError) {\r\n        throw new Error('Failed to check installed snaps.');\r\n      }\r\n      try {\r\n        const challengeResponse = await fetch('http://localhost:5001/verifier/generate-challenge');\r\n        if (!challengeResponse.ok) {\r\n          const errorText = await challengeResponse.text();\r\n          throw new Error('Failed to generate verification challenge');\r\n        }\r\n        const challengeData = await challengeResponse.json();\r\n        challenge = challengeData.challenge;\r\n        setStatusMessage('Challenge received. Preparing credential presentation...');\r\n      } catch (challengeError) {\r\n        throw new Error('Failed to generate verification challenge.');\r\n      }\r\n      if (!challenge) {\r\n        throw new Error('Failed to get challenge from verifier');\r\n      }\r\n      try {\r\n        const vp_response = await window.ethereum.request({\r\n          method: 'wallet_invokeSnap',\r\n          params: {\r\n            snapId: SNAP_ID,\r\n            request: {\r\n              method: 'get-vp',\r\n              params: {\r\n                challenge,\r\n              },\r\n            },\r\n          },\r\n        }) as VPResponse;\r\n        if (!(vp_response.success)) {\r\n          throw new Error('Failed to get verifiable presentation. You may need to get a Digital ID first.');\r\n        }\r\n        setStatusMessage('Credential found. Verifying with bank services...');\r\n        const vp = vp_response.vp\r\n        try {\r\n          const verifyResponse = await fetch('http://localhost:5001/verifier/verify-vp', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ vp }),\r\n          });\r\n          const responseText = await verifyResponse.text();\r\n          let verifyResult;\r\n          try {\r\n            verifyResult = JSON.parse(responseText);\r\n          } catch (e) {\r\n            throw new Error(`Invalid verification response: ${responseText}`);\r\n          }\r\n          if (!verifyResponse.ok || !verifyResult.verified) {\r\n            throw new Error(verifyResult.error || 'Credential verification failed');\r\n          }\r\n          const credentialSubject = verifyResult.payload?.vc.credentialSubject;\r\n          console.log(credentialSubject)\r\n          if (!credentialSubject.permissions || !credentialSubject.permissions.includes('banking')) {\r\n            throw new Error('Your Digital ID does not have banking permissions');\r\n          }\r\n          login({\r\n            name: credentialSubject.name || 'Bank Customer',\r\n            address: credentialSubject.address || '123 Main St',\r\n            licenseNumber: credentialSubject.licenseNumber || '',\r\n          });\r\n          await fetch('/api/login', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n              licenseNumber: credentialSubject.licenseNumber, // or another unique identifier\r\n              firstName: credentialSubject.name.split(' ')[0],\r\n              lastName: credentialSubject.name.split(' ')[1] || '',\r\n              address: credentialSubject.address || '123 Main St',\r\n            }),\r\n          });\r\n          router.push('/account');\r\n        } catch (verifyError) {\r\n          throw new Error('Failed to verify credential presentation.');\r\n        }\r\n      } catch (vpError) {\r\n        throw new Error('Failed to get verifiable presentation.');\r\n      }\r\n    } catch (error) {\r\n      setErrorMessage(error.message || 'Authentication failed. Please try again.');\r\n    } finally {\r\n      setIsLoading(false);\r\n      setStatusMessage('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex flex-col items-center justify-center\">\r\n      <div className=\"bg-white p-8 rounded-lg shadow-lg w-full max-w-md\">\r\n        <h1 className=\"text-3xl font-bold mb-4 text-center text-black\">Login to Texas A&M Bank</h1>\r\n        <p className=\"mb-6 text-center text-black\">\r\n          Sign in securely using your Digital ID issued by the Texas A&M DMV.\r\n        </p>\r\n        {errorMessage && (\r\n          <div className=\"bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded mb-4\">\r\n            {errorMessage}\r\n          </div>\r\n        )}\r\n        {statusMessage && (\r\n          <div className=\"bg-blue-50 border border-blue-200 text-blue-700 px-4 py-3 rounded mb-4\">\r\n            {statusMessage}\r\n          </div>\r\n        )}\r\n        <button\r\n          onClick={connectToSnap}\r\n          disabled={isConnecting}\r\n          className=\"bg-gray-200 text-gray-800 py-2 px-4 rounded-lg mb-4 w-full hover:bg-gray-300 disabled:bg-gray-100\"\r\n        >\r\n          {isConnecting ? 'Connecting...' : 'Connect to Digital ID Service'}\r\n        </button>\r\n        <button\r\n          onClick={handleDidLogin}\r\n          disabled={isLoading}\r\n          className=\"bg-blue-600 text-white py-3 px-6 rounded-lg w-full hover:bg-blue-700 disabled:bg-blue-300 mb-4\"\r\n        >\r\n          {isLoading ? 'Authenticating...' : 'Login with Digital ID'}\r\n        </button>\r\n        <div className=\"text-center mt-4\"></div>\r\n      </div>\r\n      <Sidebar />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;"],"names":[],"mappings":"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","debugId":null}}]
}