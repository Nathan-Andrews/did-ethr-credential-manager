{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 180, "column": 0}, "map": {"version":3,"sources":["file:///home/outlaw/Capstone-Kyndryl-project/bank-app/lib/db.ts"],"sourcesContent":["import mysql from 'mysql2/promise';\nimport dotenv from 'dotenv';\n\ndotenv.config();\n\nconst pool = mysql.createPool({\n  host: process.env.DB_HOST,\n  user: process.env.DB_USER,\n  password: process.env.DB_PASSWORD,\n  database: process.env.DB_NAME,\n  waitForConnections: true,\n  connectionLimit: 10,\n  queueLimit: 0,\n});\n\nexport default pool;\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEA,uIAAA,CAAA,UAAM,CAAC,MAAM;AAEb,MAAM,OAAO,mIAAA,CAAA,UAAK,CAAC,UAAU,CAAC;IAC5B,MAAM,QAAQ,GAAG,CAAC,OAAO;IACzB,MAAM,QAAQ,GAAG,CAAC,OAAO;IACzB,UAAU,QAAQ,GAAG,CAAC,WAAW;IACjC,UAAU,QAAQ,GAAG,CAAC,OAAO;IAC7B,oBAAoB;IACpB,iBAAiB;IACjB,YAAY;AACd;uCAEe","debugId":null}},
    {"offset": {"line": 204, "column": 0}, "map": {"version":3,"sources":["file:///home/outlaw/Capstone-Kyndryl-project/bank-app/app/api/account/route.ts"],"sourcesContent":["import { NextResponse, NextRequest } from 'next/server';\nimport pool from '@/lib/db'; // your database connection\nimport { BiBody } from 'react-icons/bi';\n\nexport async function GET(req: NextRequest) {\n    try {\n      // Fetch all accounts\n      const { searchParams } = new URL(req.url);\n      const licenseNumber = searchParams.get('licenseNumber');\n\n      const [accounts]: any = await pool.query(`SELECT * FROM account WHERE licenseNumber = ?`, [licenseNumber]);\n  \n      // For each account, fetch its transactions\n      const accountsWithTransactions = await Promise.all(\n        accounts.map(async (account: any) => {\n          const [transactions]: any = await pool.query(\n            `SELECT transactionID, transactionAmount, startBalance, endBalance\n             FROM transaction\n             WHERE accountID = ?`,\n            [account.accountID]\n          );\n  \n          return {\n            ...account,\n            transactions: transactions // attach transactions array\n          };\n        })\n      );\n  \n      return NextResponse.json(accountsWithTransactions);\n    } catch (error) {\n      console.error('Error fetching accounts with transactions:', error);\n      return new NextResponse('Internal Server Error', { status: 500 });\n    }\n  }"],"names":[],"mappings":";;;AAAA;AACA,2LAA6B,2BAA2B;;;AAGjD,eAAe,IAAI,GAAgB;IACtC,IAAI;QACF,qBAAqB;QACrB,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,IAAI,GAAG;QACxC,MAAM,gBAAgB,aAAa,GAAG,CAAC;QAEvC,MAAM,CAAC,SAAS,GAAQ,MAAM,2GAAA,CAAA,UAAI,CAAC,KAAK,CAAC,CAAC,6CAA6C,CAAC,EAAE;YAAC;SAAc;QAEzG,2CAA2C;QAC3C,MAAM,2BAA2B,MAAM,QAAQ,GAAG,CAChD,SAAS,GAAG,CAAC,OAAO;YAClB,MAAM,CAAC,aAAa,GAAQ,MAAM,2GAAA,CAAA,UAAI,CAAC,KAAK,CAC1C,CAAC;;gCAEmB,CAAC,EACrB;gBAAC,QAAQ,SAAS;aAAC;YAGrB,OAAO;gBACL,GAAG,OAAO;gBACV,cAAc,aAAa,4BAA4B;YACzD;QACF;QAGF,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,8CAA8C;QAC5D,OAAO,IAAI,gIAAA,CAAA,eAAY,CAAC,yBAAyB;YAAE,QAAQ;QAAI;IACjE;AACF","debugId":null}}]
}