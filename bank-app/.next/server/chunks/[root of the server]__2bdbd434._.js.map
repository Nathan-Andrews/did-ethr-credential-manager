{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 180, "column": 0}, "map": {"version":3,"sources":["file:///home/outlaw/Capstone-Kyndryl-project/bank-app/lib/db.ts"],"sourcesContent":["import mysql from 'mysql2/promise';\nimport dotenv from 'dotenv';\n\ndotenv.config();\n\nconst pool = mysql.createPool({\n  host: process.env.DB_HOST,\n  user: process.env.DB_USER,\n  password: process.env.DB_PASSWORD,\n  database: process.env.DB_NAME,\n  waitForConnections: true,\n  connectionLimit: 10,\n  queueLimit: 0,\n});\n\nexport default pool;\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEA,uIAAA,CAAA,UAAM,CAAC,MAAM;AAEb,MAAM,OAAO,mIAAA,CAAA,UAAK,CAAC,UAAU,CAAC;IAC5B,MAAM,QAAQ,GAAG,CAAC,OAAO;IACzB,MAAM,QAAQ,GAAG,CAAC,OAAO;IACzB,UAAU,QAAQ,GAAG,CAAC,WAAW;IACjC,UAAU,QAAQ,GAAG,CAAC,OAAO;IAC7B,oBAAoB;IACpB,iBAAiB;IACjB,YAAY;AACd;uCAEe","debugId":null}},
    {"offset": {"line": 204, "column": 0}, "map": {"version":3,"sources":["file:///home/outlaw/Capstone-Kyndryl-project/bank-app/app/api/login/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport pool from '@/lib/db'; // your MySQL pool/connection\n\nexport async function POST(req: NextRequest) {\n  try {\n    // You can also parse request body if needed\n    const body = await req.json();\n    const { licenseNumber, firstName, lastName, address } = body;\n\n    await pool.query(\n      `INSERT IGNORE INTO user (licenseNumber, userFirstName, userLastName, userAddress) VALUES (?, ?, ?, ?)`,\n      [licenseNumber, firstName, lastName, address]\n    );\n\n    \n    // Create two accounts\n    const accountLabels = ['Checking', 'Savings'];\n    const accounts = await Promise.all(accountLabels.map(async (label) => {\n      const initialBalance = Math.floor(Math.random() * 5000) + 100; // $100 - $5100\n      const [result]: any = await pool.query(\n        `INSERT INTO account (licenseNumber, accountLabel, accountBalance) VALUES (?, ?, ?)`,\n        [licenseNumber, label, initialBalance]\n      );\n      return {\n        accountID: result.insertId,\n        balance: initialBalance\n      };\n    }));\n\n    // Create a few sample transactions per account\n    for (const account of accounts) {\n      const numTxns = Math.floor(Math.random() * 4) + 2; // 2 to 5 transactions\n      let balance = account.balance;\n\n      for (let i = 0; i < numTxns; i++) {\n        const amount = (Math.random() * 1000 - 500).toFixed(2); // -500 to +500\n        const txnAmount = parseFloat(amount);\n        const startBalance = balance;\n        const endBalance = startBalance + txnAmount;\n        balance = endBalance;\n\n\n        await pool.query(\n          `INSERT INTO transaction (accountID, transactionAmount, startBalance, endBalance)\n           VALUES (?, ?, ?, ?)`,\n          [account.accountID, txnAmount, startBalance, endBalance]\n        );\n      }\n\n      // Update final account balance\n      await pool.query(\n        `UPDATE account SET accountBalance = ? WHERE accountID = ?`,\n        [balance, account.accountID]\n      );\n    }\n\n\n    return NextResponse.json({ message: 'Logged in successfully' });\n  } catch (error) {\n    console.error('Error inserting user:', error);\n    return new NextResponse('Internal Server Error', { status: 500 });\n  }\n}"],"names":[],"mappings":";;;AAAA;AACA,2LAA6B,6BAA6B;;;AAEnD,eAAe,KAAK,GAAgB;IACzC,IAAI;QACF,4CAA4C;QAC5C,MAAM,OAAO,MAAM,IAAI,IAAI;QAC3B,MAAM,EAAE,aAAa,EAAE,SAAS,EAAE,QAAQ,EAAE,OAAO,EAAE,GAAG;QAExD,MAAM,2GAAA,CAAA,UAAI,CAAC,KAAK,CACd,CAAC,qGAAqG,CAAC,EACvG;YAAC;YAAe;YAAW;YAAU;SAAQ;QAI/C,sBAAsB;QACtB,MAAM,gBAAgB;YAAC;YAAY;SAAU;QAC7C,MAAM,WAAW,MAAM,QAAQ,GAAG,CAAC,cAAc,GAAG,CAAC,OAAO;YAC1D,MAAM,iBAAiB,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,QAAQ,KAAK,eAAe;YAC9E,MAAM,CAAC,OAAO,GAAQ,MAAM,2GAAA,CAAA,UAAI,CAAC,KAAK,CACpC,CAAC,kFAAkF,CAAC,EACpF;gBAAC;gBAAe;gBAAO;aAAe;YAExC,OAAO;gBACL,WAAW,OAAO,QAAQ;gBAC1B,SAAS;YACX;QACF;QAEA,+CAA+C;QAC/C,KAAK,MAAM,WAAW,SAAU;YAC9B,MAAM,UAAU,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,KAAK,GAAG,sBAAsB;YACzE,IAAI,UAAU,QAAQ,OAAO;YAE7B,IAAK,IAAI,IAAI,GAAG,IAAI,SAAS,IAAK;gBAChC,MAAM,SAAS,CAAC,KAAK,MAAM,KAAK,OAAO,GAAG,EAAE,OAAO,CAAC,IAAI,eAAe;gBACvE,MAAM,YAAY,WAAW;gBAC7B,MAAM,eAAe;gBACrB,MAAM,aAAa,eAAe;gBAClC,UAAU;gBAGV,MAAM,2GAAA,CAAA,UAAI,CAAC,KAAK,CACd,CAAC;8BACmB,CAAC,EACrB;oBAAC,QAAQ,SAAS;oBAAE;oBAAW;oBAAc;iBAAW;YAE5D;YAEA,+BAA+B;YAC/B,MAAM,2GAAA,CAAA,UAAI,CAAC,KAAK,CACd,CAAC,yDAAyD,CAAC,EAC3D;gBAAC;gBAAS,QAAQ,SAAS;aAAC;QAEhC;QAGA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAyB;IAC/D,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,yBAAyB;QACvC,OAAO,IAAI,gIAAA,CAAA,eAAY,CAAC,yBAAyB;YAAE,QAAQ;QAAI;IACjE;AACF","debugId":null}}]
}