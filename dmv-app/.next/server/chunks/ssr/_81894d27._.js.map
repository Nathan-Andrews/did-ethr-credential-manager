{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/outlaw/Capstone-Kyndryl-project/dmv-app/components/sidebar-new.tsx"],"sourcesContent":["import Link from 'next/link';\r\n\r\nconst Sidebar = () => {\r\n  return (\r\n    <aside className=\"fixed top-35 left-2 rounded-xl h-65 w-64 bg-[var(--maroon)] text-white p-6\">\r\n    <h2 className=\"text-xl font-bold mb-6\">Navigation</h2>\r\n    <nav>\r\n      <ul className=\"space-y-4\">\r\n        <li>\r\n          <Link href=\"/\" className=\"block p-2 hover:bg-gray-700 rounded\">\r\n            Home \r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link href=\"/about\" className=\"block p-2 hover:bg-gray-700 rounded\">\r\n            About\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link href=\"/issue\" className=\"block p-2 hover:bg-gray-700 rounded\">\r\n            Services\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  </aside>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n"],"names":[],"mappings":";;;;AAAA;;;AAEA,MAAM,UAAU;IACd,qBACE,8OAAC;QAAM,WAAU;;0BACjB,8OAAC;gBAAG,WAAU;0BAAyB;;;;;;0BACvC,8OAAC;0BACC,cAAA,8OAAC;oBAAG,WAAU;;sCACZ,8OAAC;sCACC,cAAA,8OAAC,4JAAA,CAAA,UAAI;gCAAC,MAAK;gCAAI,WAAU;0CAAsC;;;;;;;;;;;sCAIjE,8OAAC;sCACC,cAAA,8OAAC,4JAAA,CAAA,UAAI;gCAAC,MAAK;gCAAS,WAAU;0CAAsC;;;;;;;;;;;sCAItE,8OAAC;sCACC,cAAA,8OAAC,4JAAA,CAAA,UAAI;gCAAC,MAAK;gCAAS,WAAU;0CAAsC;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQ9E;uCAEe","debugId":null}},
    {"offset": {"line": 100, "column": 0}, "map": {"version":3,"sources":["file:///home/outlaw/Capstone-Kyndryl-project/dmv-app/app/issue/page.tsx"],"sourcesContent":["\"use client\"\r\nimport React, { useState, useEffect } from 'react';\r\nimport Sidebar from '@/components/sidebar-new';\r\nimport Head from \"@/components/header\";\r\n\r\nconst SNAP_ID = 'local:http://localhost:8080';\r\n\r\ndeclare global {\r\n  interface Window {\r\n    ethereum?: any;\r\n  }\r\n}\r\n\r\nconst CredentialPage = () => {\r\n  const [did, setDid] = useState('');\r\n  const [isSnapInstalled, setIsSnapInstalled] = useState(false);\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [statusMessage, setStatusMessage] = useState('');\r\n  const [credentialIssued, setCredentialIssued] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const checkSnapInstallation = async () => {\r\n      try {\r\n        if (!window.ethereum) {\r\n          setStatusMessage('MetaMask is not installed. Please install MetaMask to use this feature.');\r\n          return;\r\n        }\r\n        \r\n        const result = await window.ethereum.request({\r\n          method: 'wallet_getSnaps',\r\n        });\r\n        \r\n        setIsSnapInstalled(!!result[SNAP_ID]);\r\n        if (!result[SNAP_ID]) {\r\n          setStatusMessage('DMV Snap is not installed. Please click \"Install Snap\" to continue.');\r\n        }\r\n        \r\n        if (result[SNAP_ID]) {\r\n          const didResult = await window.ethereum.request({\r\n            method: 'wallet_invokeSnap',\r\n            params: {\r\n              snapId: SNAP_ID,\r\n              request: {\r\n                method: 'get-did',\r\n              },\r\n            },\r\n          });\r\n          \r\n          if (didResult?.did) {\r\n            setDid(didResult.did);\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Error checking snap installation:', error);\r\n        setStatusMessage('Error connecting to MetaMask.');\r\n      }\r\n    };\r\n\r\n    checkSnapInstallation();\r\n  }, []);\r\n\r\n  const installSnap = async () => {\r\n    try {\r\n      setIsProcessing(true);\r\n      setStatusMessage('Requesting permission to install DMV Snap...');\r\n      \r\n      await window.ethereum.request({\r\n        method: 'wallet_requestSnaps',\r\n        params: {\r\n          [SNAP_ID]: {},\r\n        },\r\n      });\r\n      \r\n      const result = await window.ethereum.request({\r\n        method: 'wallet_invokeSnap',\r\n        params: {\r\n          snapId: SNAP_ID,\r\n          request: {\r\n            method: 'create-did',\r\n          },\r\n        },\r\n      });\r\n      \r\n      if (result?.did) {\r\n        setDid(result.did);\r\n        setIsSnapInstalled(true);\r\n        setStatusMessage('DMV Snap installed successfully and DID created!');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error installing snap:', error);\r\n      setStatusMessage('Error installing DMV Snap. Please try again.');\r\n    } finally {\r\n      setIsProcessing(false);\r\n    }\r\n  };\r\n\r\n  const requestCredential = async () => {\r\n    try {\r\n      setIsProcessing(true);\r\n      setStatusMessage('Requesting your Digital ID credential...');\r\n      \r\n      const issuerResponse = await fetch('http://localhost:5000/issuer/issue-vc', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          subjectDid: `did:ethr:${did}`,\r\n          claim: {\r\n            type: \"TexasDriverLicense\",\r\n            issuer: \"Texas A&M DMV\",\r\n            issuanceDate: new Date().toISOString(),\r\n            licenseNumber: \"DL\" + Math.floor(Math.random() * 1000000).toString(),\r\n            name: \"John Doe\",\r\n            dateOfBirth: \"1990-01-01\",\r\n            expiryDate: new Date(Date.now() + 365 * 24 * 60 * 60 * 1000).toISOString(),\r\n            permissions: [\"banking\", \"voting\", \"dmv\"],\r\n            address: \"123 Aggie Lane, College Station, TX\"\r\n          }\r\n        }),\r\n      });\r\n      \r\n      if (!issuerResponse.ok) {\r\n        throw new Error('Failed to issue credential');\r\n      }\r\n      \r\n      const { vc } = await issuerResponse.json();\r\n      \r\n      await window.ethereum.request({\r\n        method: 'wallet_invokeSnap',\r\n        params: {\r\n          snapId: SNAP_ID,\r\n          request: {\r\n            method: 'store-vc',\r\n            params: {\r\n              vc,\r\n            },\r\n          },\r\n        },\r\n      });\r\n      \r\n      setCredentialIssued(true);\r\n      setStatusMessage('Your Digital ID credential has been issued and stored in your wallet!');\r\n    } catch (error) {\r\n      console.error('Error requesting credential:', error);\r\n      setStatusMessage('Error obtaining credential. Please try again.');\r\n    } finally {\r\n      setIsProcessing(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center\">\r\n      <div className=\"bg-white p-8 rounded-lg shadow-lg w-full max-w-md\">\r\n        <h1 className=\"text-3xl font-bold mb-6 text-center text-black\">Get Your Digital ID</h1>\r\n        \r\n        <div className=\"mb-6\">\r\n          <p className=\"mb-4 text-black\">To get your Digital ID (DID) credential, you'll need to connect your MetaMask wallet and install our secure snap extension.</p>\r\n          \r\n          {statusMessage && (\r\n            <div className=\"bg-blue-50 p-4 rounded-md mb-4\">\r\n              <p className=\"text-blue-800\">{statusMessage}</p>\r\n            </div>\r\n          )}\r\n          \r\n          {did && (\r\n            <div className=\"mb-4\">\r\n              <p className=\"font-semibold text-black\">Your DID:</p>\r\n              <p className=\"break-all bg-gray-100 p-2 rounded text-black\">{`did:ethr:${did}`}</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n        \r\n        <div className=\"space-y-4\">\r\n          {!isSnapInstalled ? (\r\n            <button\r\n              onClick={installSnap}\r\n              disabled={isProcessing}\r\n              className=\"w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 disabled:bg-blue-300\"\r\n            >\r\n              {isProcessing ? 'Installing...' : 'Install DMV Snap'}\r\n            </button>\r\n          ) : (\r\n            <button\r\n              onClick={requestCredential}\r\n              disabled={isProcessing}\r\n              className=\"w-full bg-green-600 text-white py-2 px-4 rounded-md hover:bg-green-700 disabled:bg-green-300\"\r\n            >\r\n              {isProcessing ? 'Processing...' : 'Request Digital ID Credential'}\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <Sidebar />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CredentialPage;"],"names":[],"mappings":"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","debugId":null}}]
}